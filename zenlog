#!/bin/bash

# Zenlog main.

set -e

usage() {
  cat <<'EOF'

Zenlog

  Start a new shell where all input/output from each command will be saved
  in a separate file.

  Make sure to update PS1 and include $(zenlog_prompt_marker) in it.  See below.

Usage:
  zenlog [-d LOG_DIR]
    Start a new shell.

  zenlog -p DAYS
    Purge logs older than N days and exit.

  . <(zenlog -s)
     Install the helper functions on a bash-like shell.
     Commands are:
      - zenlog_prompt_marker
          Print the command separator marker. Include it in the prompt.
          Example:
            PS1="$(zenlog_prompt_marker) > "

      - 184 COMMAND [args...]
          Run the passed command without logging the output.
          Example:
            184 emacs

      - in_zenlog
          Return success if alreay in zenlog.
          Example:
            in_zenlog && echo "in zenlog"

      - zenlog_last_log [-r] [-n N] [-p ZENLOG_PID]
          Print the last sanitized log filename.
          -r will print the raw log filename instead.
          -n to specify which previous log to show -- default is 1 to show the
             last log.  0 is current, 2 is the second last.
          -p to show other zenlog's log file instead.

      - zenlog_open_last_log [-r] [-n N] [-p ZENLOG_PID]
          Open the last sanitized log with $ZENLOG_VIEWER or $PAGER.
          -r, -n, -p have the same meaning as zenlog_last_log.

      - zenlog_cat_last_log [-r] [-n N] [-p ZENLOG_PID]
          Cat the last sanitized log.
          -r, -n, -p have the same meaning as zenlog_last_log.

      - zenlog_history [-r] [-n N] [-p ZENLOG_PID]
          Show the last N sanitized log filenames.
          -r will show the raw log filenames instead.
          -r, -n, -p have the same meaning as zenlog_last_log
            except when -n is omitted it'll show all the log files in the
            history.

          $ZENLOG_HISTSIZE is used as the history size. (default=20)

      - zenlog_echo_command COMMAND [opts...]
          If you use this to echo back the command line that's being
          executed in the pre-exec hook, zenlog will recognize the
          current command, clean up the command line line and also
          perform auto-184.
          See also ZENLOG_ALWAYS_184.

      - zenlog_du
          Execute du on the log directory.
          Example:
            zenlog_du -h

  Environmental variables:
    ZENLOG_DIR
          Specify log file directory.

    ZENLOG_ALWAYS_184
          Specify executable names that shouldn't be logged.
          Needs to be used with zenlog_echo_command.
          Example: export ZENLOG_ALWAYS_184="vi emacs man"

EOF
  exit 1
}

# TOOD: Rewrite all in perl.
# TODO: Add completion helper and find from recent logs.

fullname="$(readlink -f "$0")"
name="$(basename "$fullname")"

# Optionally get environmental variables from ~/.zenlogrc
if [[ -f "$HOME/.zenlogrc" ]] ; then
  . "$HOME/.zenlogrc"
fi

temp=${TEMP:-${TMP:-/tmp}}
log_dir=${ZENLOG_DIR:-${temp}/zenlog}

shell_helper=0
purge_days=-1
purge_yes=0
ZENLOG_START_COMMAND="$SHELL -l"

while getopts "sd:hp:yc:" opt; do
  case "$opt" in
    s) shell_helper=1 ;;
    d) log_dir="$OPTARG" ;;
    p) purge_days="$OPTARG" ;;
    y) purge_yes=1 ;;
    c) ZENLOG_START_COMMAND="$OPTARG" ;;
    *) usage;
  esac
done
shift $(($OPTIND - 1))

if (( $purge_days >= 0 )) ; then
  if ! (( $purge_yes )) ; then
    echo -n "$name: Purging logs older than $purge_days days? (y/N) "
    read res
    [[ "$res" == "y" ]] || [[ "$res" == "Y" ]] || exit 1
  fi
  # First, remove old log files.
  find "$log_dir" -mindepth 1 \( -type f -o -type l \) -ctime +$(( $purge_days - 1 )) -delete

  # Remove broken links.
  find "$log_dir" -xtype l -delete

  # Then, remove all empty directories.
  for n in 1 2 3 4 5 6; do
    find "$log_dir" -mindepth 1 -type d -empty -delete
  done
  exit 0
fi

if (( $shell_helper )) ; then
  cat "$fullname.bash"
  exit 0
fi

# Start

if [[ "$ZENLOG_TTY" == $(tty) ]] ; then
  echo "$name: Error: already in zenlog." 1>&2
  exit 1
fi

export ZENLOG_TEMP_DIR="${temp}"
export ZENLOG_PID=$$

: ${ZENLOG_ALWAYS_184:=}
export ZENLOG_ALWAYS_184

export ZENLOG_START_COMMAND
export ZENLOG_CUR_LOG_DIR=$log_dir

# Example: (builtin|time)
export ZENLOG_COMMAND_PREFIX=${ZENLOG_COMMAND_PREFIX:-}

echo "$name: Logging to $ZENLOG_CUR_LOG_DIR ..."

exec script -qf \
    -c 'export ZENLOG_TTY=$(tty); exec $ZENLOG_START_COMMAND' \
    >( "$fullname.pl" )
