#!/usr/bin/perl -w

use strict;
use Getopt::Std;
use Cwd qw();
use File::Basename qw(dirname);
use lib (dirname(Cwd::abs_path($0)));
use Zenlog;

Zenlog::fail_unless_in_zenlog;

my $log_dir = "$ENV{ZENLOG_DIR}/pids/$ENV{ZENLOG_PID}/";

-d $log_dir or die "Log directory '$log_dir' not found.\n";

sub usage() {
  print <<'EOF';

  Zenlog history: Show most recent log files on this console.

  Usage: zenlog history [-n NUM FILES] [-p PID] [-r]

    -n: Number of log files to show.

    -p: Specify another ZENLOG_PID.

    -r: Show RAW log files instead of SAN files.

EOF
  exit 1;
}

# Parse options.

my %opts = ();

getopts("n:p:rh", \%opts) or usage;
$opts{h} and usage;

my $num = $opts{n} // -1; #/
my $pid = $opts{p} // $ENV{ZENLOG_PID}; #/
my $name = $opts{r} ? "R" : "P";

# Collect the files.

my @files = ();

if ($num >= 0) {
  @files = ($log_dir . $name x ($num + 1));
} else {
  @files = reverse(glob("${log_dir}${name}*"));
}

# Print the files, resolving symlinks, but only one level.
for my $file (@files) {
  print(readlink($file), "\n");
}
